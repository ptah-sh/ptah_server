on:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  pull-requests: write
  id-token: write

name: release-please

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "26"
          elixir-version: "1.16"
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - run: mix deps.get
      # TODO: add `mix test` when tests will be written. :)
      - run: MIX_ENV=prod mix release
      - run: tar -cvJf ptah_server_linux_x86_64.tar.xz -C _build/prod/rel ptah_server
      - uses: actions/upload-artifact@v4
        with:
          name: ptah_server
          path: ptah_server_linux_x86_64.tar.xz

  release-please:
    runs-on: ubuntu-latest
    needs: compile
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GH_RELEASE_PLEASE_TOKEN }}
          release-type: elixir
      - run: echo "release_created=${{ steps.release.outputs.release_created }}" >> "$GITHUB_OUTPUT"
      - run: echo "tag_name=${{ steps.release.outputs.tag_name }}" >> "$GITHUB_OUTPUT"

  upload-release-artifact:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: ptah_server
      - run: gh release upload "${{ needs.release-please.outputs.tag_name }}" "ptah_server_linux_x86_64.tar.xz"
        env:
          GH_TOKEN: ${{ secrets.GH_RELEASE_PLEASE_TOKEN }}
  build-and-publish-docker-image:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ptah-sh/ptah_server
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: latest,${{ needs.release-please.outputs.tag_name }},${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
# TODO: should we create a github deployment?
#   deploy:
#     runs-on: ubuntu-latest
#     needs: release-please
#     if: ${{ needs.release-please.outputs.release_created }}
#     steps:
#       - name: Deploy
#         run: |
#           curl -X POST -H '' https://app.ptah.sh/api/v1/services/1/deploy
